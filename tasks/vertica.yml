---
- name: Check if database exists
  command: /opt/vertica/bin/admintools -t list_db -d {{ vertica_database_name }}
  sudo_user: dbadmin
  ignore_errors: yes
  register: create_database

- name: Place community license key
  copy: src=community_license.key dest=/opt/vertica/config/share/license.key owner="{{vertica_dbadmin_user}}" group="{{vertica_dbadmin_group}}" mode=664
  when: vertica_license is not defined

- name: Place license key
  copy: content="{{vertica_license}}" dest=/opt/vertica/config/share/license.key owner="{{vertica_dbadmin_user}}" group="{{vertica_dbadmin_group}}" mode=664
  when: vertica_license is defined

- name: Create database
  command: su dbadmin -c '/opt/vertica/bin/admintools -t create_db -s {{vertica_cluster | default('127.0.0.1')}} -d {{ vertica_database_name }} -p {{vertica_dbadmin_password}}'
  environment: "{{vertica_env}}"
  when: create_database|failed

- name: Remove vertica file
  file: path=/opt/vertica/config/share/license.key state=absent

- name: Set restart policy
  command: /opt/vertica/bin/admintools -t set_restart_policy -d {{ vertica_database_name }} -p always
  sudo_user: dbadmin
  environment: "{{vertica_env}}"

- name: Copy over vertica sql files
  copy: src={{ item }} dest=/var/vertica/{{ item }} mode=660
  with_items:
    - mon_alarms_schema.sql
    - mon_metrics_schema.sql
  register: sql_file_status

- name: Copy over template vertica sql files
  template: src={{ item }}.j2 dest=/var/vertica/{{ item }} mode=660
  with_items:
    - mon_users_and_limits.sql
  register: sql_template_status

- name: Write schema to vertica
  shell: /opt/vertica/bin/vsql -U dbadmin -w  {{vertica_dbadmin_password}} < /var/vertica/{{ item }}
  with_items:
    - mon_metrics_schema.sql
    - mon_alarms_schema.sql
    - mon_users_and_limits.sql
  when: sql_file_status|changed or sql_template_status|changed

- name: Create cron job to clean up old partitions
  template: src=vertica-cleanup.j2 dest=/etc/cron.daily/vertica-cleanup mode=750

# TODO: ENABLE SSL
